{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "useJSXTextNode": true,
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "import", "prettier", "react-hooks", "editorconfig"],
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:editorconfig/all",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "rules": {
    "import/order": [
      1,
      {
        "groups": ["builtin", "external", "internal", ["sibling", "parent"], "object", "type"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin"
          },
          {
            "pattern": "react-router-dom",
            "group": "builtin"
          },
          {
            "pattern": "*.svg",
            "group": "object",
            "patternOptions": { "matchBase": true }
          },
          {
            "pattern": "*.scss",
            "group": "type",
            "patternOptions": { "matchBase": true }
          }
        ],
        "pathGroupsExcludedImportTypes": ["react", "react-router-dom"],
        "newlines-between": "always"
      }
    ],
    "react/jsx-curly-brace-presence": ["warn", { "props": "never", "children": "never" }],
    "react/self-closing-comp": ["warn", { "component": true, "html": true }],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "comma-dangle": ["off"],
    "@typescript-eslint/ban-types": "warn",
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/member-delimiter-style": "warn",
    "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-duplicate-enum-values": "warn",
    "@typescript-eslint/no-confusing-void-expression": [
      "warn",
      { "ignoreArrowShorthand": true, "ignoreVoidOperator": true }
    ],
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": ["warn", { "allowSingleExtends": false }],
    "@typescript-eslint/no-explicit-any": ["warn", { "fixToUnknown": true, "ignoreRestArgs": true }],
    "@typescript-eslint/explicit-module-boundary-types": [
      "warn",
      {
        "allowArgumentsExplicitlyTypedAsAny": false,
        "allowDirectConstAssertionInArrowFunctions": true,
        "allowedNames": [],
        "allowHigherOrderFunctions": false,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "warn",
      {
        "allowComparingNullableBooleansToTrue": false,
        "allowComparingNullableBooleansToFalse": false
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
    "@typescript-eslint/no-extra-semi": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/restrict-template-expressions": [
      "warn",
      {
        "allowNumber": true,
        "allowBoolean": false,
        "allowAny": false,
        "allowNullish": false,
        "allowRegExp": false
      }
    ],
    "@typescript-eslint/no-unsafe-return": "warn",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "warn",
    "@typescript-eslint/adjacent-overload-signatures": "warn",
    "@typescript-eslint/no-require-imports": "warn",
    "@typescript-eslint/no-useless-empty-export": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/class-literal-property-style": "warn",
    "@typescript-eslint/prefer-includes": "warn",
    "@typescript-eslint/no-floating-promises": ["warn", { "ignoreVoid": true, "ignoreIIFE": false }],
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/prefer-reduce-type-parameter": "warn",
    "@typescript-eslint/no-dupe-class-members": "warn",
    "@typescript-eslint/require-await": "warn",
    "no-restricted-imports": "off",
    "@typescript-eslint/no-restricted-imports": "off",
    "@typescript-eslint/restrict-plus-operands": ["warn", { "checkCompoundAssignments": true }],
    "@typescript-eslint/array-type": ["warn", { "default": "array-simple", "readonly": "array-simple" }],
    "@typescript-eslint/consistent-indexed-object-style": ["warn", "record"],
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["warn", { "allowIndexSignaturePropertyAccess": true }],
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "explicit",
        "overrides": {
          "accessors": "explicit",
          "constructors": "no-public",
          "methods": "explicit",
          "properties": "explicit",
          "parameterProperties": "explicit"
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "signature",

          ["public-field", "public-get", "public-set"],
          ["protected-field", "protected-get", "protected-set"],
          ["private-field", "private-get", "private-set"],

          "constructor",
          "method"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "function",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "classProperty",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "classProperty",
        "modifiers": ["private"],
        "leadingUnderscore": "allow",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enum",
        "format": ["UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE", "camelCase"]
      },
      {
        "selector": "objectLiteralProperty",
        "format": ["camelCase", "PascalCase", "snake_case"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeProperty",
        "format": ["camelCase", "snake_case"]
      }
    ]
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  }
}
